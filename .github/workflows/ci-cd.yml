name: "CI/CD"

on:
  workflow_dispatch:
  push:
    branches: "*"
  pull_request:
    branches: "*"

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }} @ ${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Get submodule commit hash
        id: get-submodule-hash
        run: echo "SUBMODULE_HASH=$(git submodule)" >> $GITHUB_OUTPUT

      - name: Check if submodule build is cached
        uses: actions/cache@v4
        id: submodule-cache
        with:
          path: crafty/web/pkg
          key: ${{ steps.get-submodule-hash.outputs.SUBMODULE_HASH }}

      - name: Build submodule
        if: steps.submodule-cache.outputs.cache-hit != 'true'
        run: |
          yarn global add wasm-pack@0.12.1
          yarn run build-submodule

      - run: yarn install --frozen-lockfile

      - run: yarn run lint

      # TODO: This takes too long; figure out how to do cargo installs faster.
      # - name: Check server for errors
      #   env:
      #     DATABASE_URL: sqlite:sqlite.db?mode=rwc
      #   working-directory: ./server
      #   run: |
      #     cargo install sqlx-cli --no-default-features --features native-tls,sqlite
      #     sqlx migrate run
      #     cargo check

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy backend
        if: ${{ github.ref_name == 'main' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: ./server
        run: |
          LOG_LEVEL=debug flyctl deploy --verbose -a servingway --remote-only

      - name: Deploy backend (preview)
        if: ${{ github.ref_name == 'preview' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_PREVIEW_API_TOKEN }}
        working-directory: ./server
        run: |
          LOG_LEVEL=debug flyctl deploy --verbose -a servingway-preview --remote-only

      - name: Deploy frontend
        if: ${{ github.ref_name == 'main' }}
        env:
          AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          VITE_API_URL: ${{ secrets.API_URL }}
        run: |
          VITE_REVISION=$GITHUB_SHA yarn run build
          yarn netlify deploy --auth $AUTH_TOKEN --site $SITE_ID --prod --dir dist \
            --message "$GITHUB_REF @ $GITHUB_SHA (attempt #$GITHUB_RUN_ATTEMPT)"

      - name: Deploy frontend (preview)
        if: ${{ github.ref_name == 'preview' }}
        env:
          AUTH_TOKEN: ${{ secrets.NETLIFY_PREVIEW_AUTH_TOKEN }}
          SITE_ID: ${{ secrets.NETLIFY_PREVIEW_SITE_ID }}
          VITE_API_URL: ${{ secrets.PREVIEW_API_URL }}
        run: |
          VITE_REVISION=$GITHUB_SHA yarn run build
          yarn netlify deploy --auth $AUTH_TOKEN --site $SITE_ID --prod --dir dist \
            --message "$GITHUB_REF @ $GITHUB_SHA (attempt #$GITHUB_RUN_ATTEMPT)"
